server {
    listen 8081;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # Явно указываем MIME типы для JavaScript
    types {
        text/html                             html htm shtml;
        text/css                              css;
        application/javascript                js;
        image/png                             png;
        image/jpeg                            jpg jpeg;
        image/gif                             gif;
        image/svg+xml                         svg svgz;
        image/x-icon                          ico;
        application/json                      json;
        font/woff                             woff;
        font/woff2                            woff2;
        application/x-font-ttf                ttf;
        application/x-font-otf                otf;
    }

    # Логгирование для отладки
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Кэширование статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        add_header Content-Type $content_type;
    }

    # Специальный маршрут для тестового HTML WebSocket
    location = /websocket-test.html {
        # Отключаем кэширование для этого файла
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        # Явно указываем тип содержимого
        add_header Content-Type "text/html; charset=utf-8";
    }

    # Явно обрабатываем manifest.json
    location = /manifest.json {
        root /usr/share/nginx/html;
        try_files $uri =404;
        add_header Content-Type "application/manifest+json; charset=utf-8";
        expires -1; # Отключаем кэширование для манифеста
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Автоподключение скрипта отладки к index.html
    location = /index.html {
        sub_filter "</head>" "<script src='/debug.js'></script></head>";
        sub_filter_once on;
        expires -1;
        add_header Cache-Control "no-store, no-cache, must-revalidate";
    }

    # Для React Router (SPA)
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Прокси для WebSocket соединений - важно разместить перед /api/ локацией
    location /api/ws {
        # Используем IP-адрес вместо имени сервиса
        proxy_pass http://10.16.52.15:9091/api/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        # Добавляем передачу протокола WebSocket - важно для токена авторизации
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_send_timeout 3600s;
        # Отключаем буферизацию для WebSocket
        proxy_buffering off;
        # Добавляем отладочные заголовки
        add_header X-Debug-Info "websocket-connection" always;
    }

    # Добавляем правильный маршрут для endpoint health check
    location = /api/health {
        # Используем IP-адрес вместо имени сервиса
        proxy_pass http://10.16.52.15:9095/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 5s;
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_buffering off;
    }

    # Специальный маршрут для API инициализации
    location /api/system/ {
        # Используем IP-адрес вместо имени сервиса
        proxy_pass http://10.16.52.15:9095/api/system/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 30s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;

        # Отключаем буферизацию для быстрого ответа
        proxy_buffering off;
        # Отладочные заголовки
        add_header X-Debug-Info "system-api" always;
    }

    # Проксирование всех API запросов на сервер
    location /api/ {
        # Используем IP-адрес вместо имени сервиса
        proxy_pass http://10.16.52.15:9095/api/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 30s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;

        # Увеличиваем размер буферов
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Добавляем отладочные заголовки
        add_header X-Debug-API "main-api" always;
    }

    # Альтернативный путь для WebSocket - иногда необходимо для совместимости
    location /ws {
        proxy_pass http://10.16.52.15:9091/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        # Добавляем передачу протокола WebSocket - важно для токена авторизации
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 3600s;
        proxy_connect_timeout 3600s;
        proxy_send_timeout 3600s;
        # Отключаем буферизацию для WebSocket
        proxy_buffering off;
    }

    # Livekit для видеозвонков
    location /livekit {
        proxy_pass http://10.16.52.15:7880;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_buffering off;
        proxy_read_timeout 3600s;
        proxy_send_timeout 3600s;
    }

    # Добавляем пинг-эндпоинт для проверки работы Nginx
    location = /nginx-status {
        default_type text/plain;
        return 200 "Nginx работает";
    }

    # Базовые настройки безопасности
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
}