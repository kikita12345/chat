load_module /usr/lib/nginx/modules/ngx_http_geoip_module.so;

user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;

events {
    multi_accept on;
    worker_connections 65535;
    use epoll;
}

http {
    # Основные настройки
    charset utf-8;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    client_max_body_size 0;

    include mime.types;
    default_type application/octet-stream;

    types {
        application/json map;
        font/otf otf;
    }

    log_format main '$remote_addr ($geoip_country_code) - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" '
                    '"$http_x_forwarded_for" "$http_x_real_ip" '
                    '$request_time $upstream_response_time';

    access_log /var/log/nginx/access.log main buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    # SSL общие настройки - упрощённые для лучшей совместимости
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers off;
    ssl_stapling off;  # Отключаем OCSP stapling для устранения проблем
    resolver 1.1.1.1 1.0.0.1 ipv6=off valid=300s;
    resolver_timeout 5s;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Увеличены таймауты для стабильности
    client_body_timeout 3600s;
    client_header_timeout 3600s;
    keepalive_timeout 3600s;
    send_timeout 3600s;

    client_body_buffer_size 512k;
    client_header_buffer_size 512k;
    large_client_header_buffers 4 512k;
    proxy_buffer_size 512k;
    proxy_buffers 8 512k;
    proxy_busy_buffers_size 1024k;

    geoip_country /usr/share/GeoIP/GeoIP.dat;

    map $remote_addr $allow_ip {
        default 0;
        95.30.251.97 1;
        91.211.115.71 1;
        51.250.110.172 1;
        82.202.136.185 1;  # Добавлен IP прокси-сервера
    }

    map $geoip_country_code $allow_country {
        default 0;
        RU 1;
        BY 1;
        AZ 1;
        AE 1;
    }

    map "$allow_ip:$allow_country" $access_allowed {
        "1:0" 1;
        "1:1" 1;
        "0:1" 1;
        default 0;
    }

    map $request_uri $security_block {
        default 0;
        "~*/remote.php/dav/files/" 0;
        "~*/remote.php/webdav/" 0;
        "~*/apps/files/" 0;
        "~*/uploads/" 0;
        "~*/api/" 0;
        "~*/oauth/" 0;
        "~*\.(php|php3|php4|php5|phtml|pl|py|jsp|asp|htm|shtml|sh|cgi)$" 1;
    }

    map $http_user_agent $bad_client {
        default 0;
        ~*(nikto|sqlmap|netsparker|nmap|dirbuster|metasploit|burpsuite|acunetix|havij) 1;
    }

    include /etc/nginx/nwaf/conf/global/*.conf;
    include /etc/nginx/nwaf/conf/custom/*.conf;

    # --- GitLab Server ---
    server {
        listen 80;
        server_name git.kikita.ru;

        # Директива для Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Остальные запросы перенаправляем на HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl;
        # http2 off; - отключаем HTTP/2
        server_name git.kikita.ru;

        include /etc/nginx/nwaf/conf/location/*.conf;

        ssl_certificate /etc/letsencrypt/live/git.kikita.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/git.kikita.ru/privkey.pem;

        access_log /var/log/nginx/git.kikita.ru.access.log main buffer=32k flush=5s;
        error_log /var/log/nginx/git.kikita.ru.error.log warn;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        if ($access_allowed = 0) {
            return 444;
        }

        location / {
            proxy_pass http://95.30.251.97:55180;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 443;
            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
        }
    }

    # --- Nextcloud Server ---
    server {
        listen 80;
        server_name cloud.kikita.ru;

        # Директива для Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Остальные запросы перенаправляем на HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl;
        # http2 off; - отключаем HTTP/2
        server_name cloud.kikita.ru;

        include /etc/nginx/nwaf/conf/location/*.conf;

        ssl_certificate /etc/letsencrypt/live/cloud.kikita.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/cloud.kikita.ru/privkey.pem;

        access_log /var/log/nginx/cloud.kikita.ru.access.log main buffer=32k flush=5s;
        error_log /var/log/nginx/cloud.kikita.ru.error.log warn;

        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Robots-Tag "none" always;
        add_header X-Download-Options "noopen" always;
        add_header X-Permitted-Cross-Domain-Policies "none" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;

        # Отключаем проверку доступа для Nextcloud для избежания проблем с прокси
        # if ($access_allowed = 0) {
        #     return 444;
        # }

        # Основной обработчик для Nextcloud
        location / {
            proxy_pass http://95.30.251.97:55080;
            proxy_http_version 1.1;

            # Корректно настраиваем заголовки для передачи IP
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;

            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            set $security_block 0;
        }

        # Специальные настройки для WebDAV и управления файлами
        location ~ ^/(?:remote\.php|apps/files|remote\.php/(?:webdav|dav)) {
            proxy_pass http://95.30.251.97:55080;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;

            client_max_body_size 0;
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            set $security_block 0;
            set $bad_client 0;
        }

        # Дополнительная локация для всех PHP-запросов к Nextcloud
        location ~ ^/(?:index|remote|public|cron|core/ajax/update|status|ocs/v[12]|updater/.+|oc[ms]-provider/.+|.+/richdocumentscode/proxy)\.php(?:$|/) {
            proxy_pass http://95.30.251.97:55080;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header X-Forwarded-Port 443;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Server $host;

            client_max_body_size 0;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_read_timeout 3600s;
            proxy_request_buffering off;
            proxy_buffering off;
            set $security_block 0;
            set $bad_client 0;
        }

        include /etc/nginx/nextcloud/*.conf;
    }

    # --- Chat Messenger Server ---
    server {
        listen 80;
        server_name chat.kikita.ru;

        # Директива для Let's Encrypt
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

        # Остальные запросы перенаправляем на HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    server {
        listen 443 ssl;
        # http2 off; - отключаем HTTP/2
        server_name chat.kikita.ru;

        include /etc/nginx/nwaf/conf/location/*.conf;

        ssl_certificate /etc/letsencrypt/live/chat.kikita.ru/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/chat.kikita.ru/privkey.pem;

        access_log /var/log/nginx/chat.kikita.ru.access.log main buffer=32k flush=5s;
        error_log /var/log/nginx/chat.kikita.ru.error.log warn;

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        if ($access_allowed = 0) {
            return 444;
        }

        # Проверка здоровья системы
        location = /api/health {
            proxy_pass http://95.30.251.97:55580/api/health;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 5s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_buffering off;
        }

        # Настройка WebSocket прокси для chat.kikita.ru
        location ~* ^/api/ws {
            # Извлекаем токен из URL-параметра и устанавливаем переменную
            if ($arg_token) {
                set $auth_token $arg_token;
            }

            # Извлекаем токен из cookie MMAUTHTOKEN, если нет в URL
            if ($auth_token = "") {
                set $auth_token $cookie_MMAUTHTOKEN;
            }

            # Форматы передачи токена - используем все возможные
            # 1. Стандартный Bearer токен
            proxy_set_header Authorization "Bearer $auth_token";

            # 2. Просто токен без префикса
            proxy_set_header X-Auth-Token "$auth_token";

            # 3. Передаем все cookies целиком для аутентификации
            proxy_set_header Cookie $http_cookie;

            proxy_pass http://95.30.251.97:55583;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Увеличиваем таймауты для WebSocket до максимальных значений
            proxy_connect_timeout 300s;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            # Отключаем буферизацию для WebSocket
            proxy_buffering off;
            # Отключаем кэширование для WebSocket
            proxy_cache off;
            # Добавляем TCP keepalive для поддержания соединений
            proxy_socket_keepalive on;
            add_header X-Proxy-Debug-Info "websocket-from-main-nginx" always;
        }

        # Прокси для API бекенда
        location /api/ {
            proxy_pass http://95.30.251.97:55580;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 443;
            # Добавляем явную передачу заголовка Authorization
            proxy_set_header Authorization $http_authorization;
            client_max_body_size 50M;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_connect_timeout 3600s;
            proxy_send_timeout 3600s;
        }

        # LiveKit SFU WebSocket поддержка
        location /livekit {
            proxy_pass http://95.30.251.97:7880;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 3600s;
        }

        # LiveKit SFU RTC WebSocket поддержка
        location /rtc {
            proxy_pass http://95.30.251.97:7881;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_read_timeout 3600s;
            proxy_send_timeout 3600s;
            proxy_connect_timeout 3600s;
        }

        # Специальный маршрут для тестового файла WebSocket
        location = /websocket-test.html {
            add_header Content-Type text/html;
            alias /var/www/html/websocket-test.html;
            expires -1;
            add_header Cache-Control "no-store, no-cache, must-revalidate";
        }

        # Прокси для веб-клиента
        location / {
            proxy_pass http://95.30.251.97:55581;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port 443;
            client_max_body_size 50M;
            proxy_buffering off;
            proxy_read_timeout 60s;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
        }
    }
}
